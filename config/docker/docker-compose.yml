version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: madrasa_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DB:-madrasa}
      MYSQL_USER: ${MYSQL_USER:-madrasa_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-madrasa_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/commands:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - madrasa_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis/KeyDB Cache
  redis:
    image: eqalpha/keydb:latest
    container_name: madrasa_redis
    restart: unless-stopped
    command: keydb-server ./keydb.conf
    volumes:
      - ./keydb.conf:/etc/keydb/keydb.conf
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - madrasa_network
    healthcheck:
      test: ["CMD", "keydb-cli", "ping"]
      timeout: 20s
      retries: 10

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: madrasa_otel_collector
    restart: unless-stopped
    command: ["--config", "/etc/otel-collector-config.yaml"]
    volumes:
      - ./observability/collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus metrics (legacy)
    networks:
      - madrasa_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133"]
      timeout: 20s
      retries: 10

  # Madrasa Application
  madrasa_app:
    build: .
    container_name: madrasa_app
    restart: unless-stopped
    environment:
      # Database Configuration
      MYSQL_HOST: mysql
      MYSQL_USER: ${MYSQL_USER:-madrasa_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-madrasa_password}
      MYSQL_DB: ${MYSQL_DB:-madrasa}
      MYSQL_PORT: 3306
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_DB: 0
      
      # OpenTelemetry Configuration
      OTEL_ENABLED: ${OTEL_ENABLED:-true}
      OTEL_STRICT: ${OTEL_STRICT:-false}
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      
      # Server Configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8000
      
      # Security Configuration
      SECRET_KEY: ${SECRET_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      WTF_CSRF_SECRET_KEY: ${WTF_CSRF_SECRET_KEY}
      
      # API Keys
      MOBILE_CLIENT_KEY: ${MOBILE_CLIENT_KEY}
      WEB_CLIENT_KEY: ${WEB_CLIENT_KEY}
      ADMIN_KEY: ${ADMIN_KEY}
      POWER_KEY: ${POWER_KEY}
      
      # Admin Credentials
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
      
      # External Services
      SMS_API_KEY: ${SMS_API_KEY}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_API_KEY: ${EMAIL_API_KEY}
      RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      
      # Business Configuration
      BUSINESS_EMAIL: ${BUSINESS_EMAIL}
      BUSINESS_PHONE: ${BUSINESS_PHONE}
      DEV_EMAIL: ${DEV_EMAIL}
      DEV_PHONE: ${DEV_PHONE}
      
      # Environment
      FLASK_ENV: ${FLASK_ENV:-production}
      MAINTENANCE_MODE: ${MAINTENANCE_MODE:-false}
      
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      otel-collector:
        condition: service_healthy
    networks:
      - madrasa_network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      timeout: 20s
      retries: 10
      start_period: 30s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: madrasa_nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - madrasa_app
    networks:
      - madrasa_network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  madrasa_network:
    driver: bridge
