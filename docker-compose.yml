version: "3.9"

services:
  # FastAPI App
  app:
    build: .
    container_name: madrasa_app
    restart: unless-stopped
    environment:
      MYSQL_HOST: ${MYSQL_HOST:-mysql}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_DB: ${MYSQL_DB:-madrasa}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      KEYDB_HOST: ${KEYDB_HOST:-keydb}
      KEYDB_PORT: ${KEYDB_PORT:-6379}
      KEYDB_PASSWORD: ${KEYDB_PASSWORD:-secret}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./static:/app/static
      - ./templates:/app/templates
    expose:
      - "8000"
    networks:
      - app_network
      - observability_network
    depends_on:
      keydb:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 30s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: madrasa_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/hosting/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static:ro
      - ./uploads:/app/uploads:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - app_network
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: madrasa_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${MYSQL_DB:-madrasa}
      MYSQL_USER: ${MYSQL_USER:-user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    expose:
      - ${MYSQL_PORT:-3306}
    ports:
      - "${MYSQL_PORT:-3306}:${MYSQL_PORT:-3306}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql:/docker-entrypoint-initdb.d:ro
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=${MYSQL_ROOT_PASSWORD:-rootpass} || exit 1"]
      timeout: 10s
      retries: 10
      interval: 30s
      start_period: 30s

  # KeyDB
  keydb:
    image: eqalpha/keydb:latest
    container_name: madrasa_keydb
    restart: unless-stopped
    expose:
      - ${KEYDB_PORT:-6379}
    ports:
      - "${KEYDB_PORT:-6379}:${KEYDB_PORT:-6379}"
    volumes:
      - keydb_data:/data
      - ./config/keydb/keydb.conf:/etc/keydb/keydb.conf:ro
    command: ["keydb-server", "/etc/keydb/keydb.conf"]
    networks:
      - observability_network
    healthcheck:
      test: ["CMD-SHELL", "keydb-cli ping | grep PONG || exit 1"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s
    environment:
      KEYDB_PASSWORD: ${KEYDB_PASSWORD:-secret}

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: madrasa_otel_collector
    restart: unless-stopped
    command: ["--config", "/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel/collector-config.yaml:/etc/otel-collector-config.yaml:ro
    expose:
      - "4317"
      - "4318"
      - "9464"
      - "13133"
    ports:
      - "4317:4317"
      - "4318:4318"
      - "9464:9464"
      - "13133:13133"
    networks:
      - observability_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:13133/ || exit 1"]
      timeout: 20s
      retries: 10
      start_period: 30s
      interval: 15s
    depends_on:
      - jaeger

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: madrasa_jaeger
    restart: unless-stopped
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_HTTP_ENABLED=true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - observability_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:16686 || exit 1"]
      timeout: 20s
      retries: 10
      start_period: 20s
      interval: 15s

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: madrasa_prometheus
    restart: unless-stopped
    command: >
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/etc/prometheus/console_libraries
      --web.console.templates=/etc/prometheus/consoles
      --storage.tsdb.retention.time=200h
      --web.enable-lifecycle
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./config/otel/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - observability_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      timeout: 20s
      retries: 10
      start_period: 20s
      interval: 15s
    depends_on:
      - otel-collector

volumes:
  prometheus_data:
    driver: local
  keydb_data:
    driver: local
  mysql_data:
    driver: local

networks:
  app_network:
    driver: bridge
  observability_network:
    driver: bridge
